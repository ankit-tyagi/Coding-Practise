System Design Interview
	A - Ask good questions
	B - Don't use buzzwords
	C - Clear and organized thinking
	D - Drive discussions with 80-20 rule



Things to consider for System Design Interview
	1.	Features
	2.	API
	3.	Availability
	4.	Latency
	5.	Scalability
	6.	Durability
	7.	Class Diagram
	8.	Security and Privacy
	9.	Cost-effective


Concepts to know
	1.	Vertical VS Horizontal scaling
	2.	CAP theorem
	3.	ACID VS BASE
 	4.	Partitioning/Sharding 
		4.1	Consistent hashing
	5.	Optimistic vs pessimistic locking
	6.	Strong vs eventual consistency
	7.	RelationalDB vs NoSQL
	8.	Types of NoSQL
		8.1	Key value
		8.2	Wide column
		8.3	Document-based
		8.4	Graph-based
	9.	Caching
	10.	Data center/racks/hosts
	11.	CPU/memory/Hard drives/Network bandwidth
	12.	Random vs sequential read/writes to disk
	13.	HTTP vs http2 vs WebSocket
	14.	TCP/IP model
	15.	ipv4 vs ipv6
	16.	TCP vs UDP
	17.	DNS lookup
	18.	Http & TLS
	19.	Public key infrastructure and certificate authority(CA)
	20.	Symmetric vs asymmetric encryption
	21.	Load Balancer
	22.	CDNs & Edges
	23.	Bloom filters and Count-Min sketch
	24.	Paxos
		24.1	Leader election
	25.	Design patterns and Object-oriented design
	26.	Virtual machines and containers
	27.	Pub-sub architecture
	28.	MapReduce
	29.	Multithreading, locks, synchronization, CAS(compare and set



Commonly used Tools 
	1.	Cassandra
	2.	MongoDB/Couchbase
	3.	Mysql
	4.	Memcache
d	5.	Redis
	6.	Zookeeper
	7.	Kafka
	8.	NGINX
	9.	HAProxy
	10.	Solr, Elastic search
	11.	blobstore example:- Amazon S3
	12.	Docker, Kubernetes, Mesos
	13.	Hadoop/Spark and HDFS